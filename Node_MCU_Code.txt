#include <SoftwareSerial.h>
#include <ArduinoJson.h>
#include <ESP8266WiFi.h>
#include "secrets.h"
#include "ThingSpeak.h" 

SoftwareSerial s(D7,D6);
WiFiClient  client;

char ssid[] = SECRET_SSID;    
char pass[] = SECRET_PASS;   
int keyIndex = 0;           
unsigned long myChannelNumber = SECRET_CH_ID;
const char * myWriteAPIKey = SECRET_WRITE_APIKEY;
 
void setup()
{
  Serial.begin(115200);
  s.begin(115200);
  
  while (!Serial) 
  {
    continue;
  }
  
  WiFi.mode(WIFI_STA); 
  ThingSpeak.begin(client); 
}
 
void loop()
{
  StaticJsonBuffer<1000> jsonBuffer;
  JsonObject& abhi = jsonBuffer.parseObject(s);
 
  if (abhi == JsonObject::invalid())
  {
    return;
  }
  
  Serial.println("Heart Beat Received");
  Serial.println("");
  Serial.print("BPM - ");
  
  int heart_rate_data = abhi["BPM"];
  int number = abhi["BPM"];
  
  Serial.println(heart_rate_data);
  Serial.println("");
  
  if(WiFi.status() != WL_CONNECTED)
  {
    Serial.print("Attempting to connect to SSID: ");
    Serial.println(SECRET_SSID);
    
    while(WiFi.status() != WL_CONNECTED)
    {
      WiFi.begin(ssid, pass);  
      Serial.print(".");
      delay(5000);     
    } 
    Serial.println("\nConnected.");
  }
  
  int x = ThingSpeak.writeField(myChannelNumber, 1, number, myWriteAPIKey);
  if(x == 200)
  {
    Serial.println("Channel update successful.");
  }
  else
  {
    Serial.println("Problem updating channel. HTTP error code " + String(x));
  }
  
  delay(2000); 
  Serial.println("---------------------Go For Next Rate--------------------");
  Serial.println("");
}